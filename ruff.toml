line-length = 120
indent-width = 4

[lint]
# https://docs.astral.sh/ruff/rules/#mccabe-c90
select = [
    "F",        # Pyflakes
    "E",        # Pycodestyle errors
    "W",        # Pycodestyle warnings
    "R",        # Refactor
    "C90",      # McCabe complexity
    "D",        # Pydocstyle
    "I",        # Import order
    "N",        # Naming conventions
    "ASYNC",    # Asyncio
]

ignore = [
    "D100",     # Missing docstring in public module
    "D101",     # Missing docstring in public class
    "D102",     # Missing docstring in public method
    "D103",     # Missing docstring in public function
    "D104",     # Missing docstring in public package
    "D105",     # Missing docstring in magic method
    "D107",     # Missing docstring in __init__
    "D205",     # Blank line between summary and description
    "D401",     # Docstring first line, imperative mood
    "D417",     # Missing argument description in the docstring
    "RET503",   # Missing return
    "RET504",   # Unecceary assignment before return
    "RET505",   # Unnecessary `elif` after `return` statement
]

# https://docs.astral.sh/ruff/linter/#fix-safety
fixable = [
  "ALL"
]

unfixable = [
  "F401"       # Remove unused imports
]

[format]
quote-style = "double"
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
